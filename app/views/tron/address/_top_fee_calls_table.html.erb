<div class="col-12 col-lg-6 mb-4">
  <div class="card">
      <div class="card-header">
        <% if @token_info && @token_info.name && @token_info.symbol %>
          <%= t('widgets.headers.top_fee_calls_table_token', token_name: @token_info.name, token_symbol: @token_info.symbol) %>
        <% else %>
          <%= t('widgets.headers.top_fee_calls_table') %>
        <% end %>
      </div>
    <div class="card-body">
      <div id="top_gas_calls_table"><%= t('loading') %></div>
    </div>
  </div>
</div>

<script type="module">

    $( document ).ready(function() {


        var query = new widgets.query(`query (
                                      $address: String!,
                                      $limit: Int!,
                                      $offset: Int!
                                      $from: ISO8601DateTime,
                                      $till: ISO8601DateTime){
                                  tron{
                                    smartContractCalls(options:{desc: "fee", limit: $limit, offset: $offset},
                                      date: {since: $from till: $till },
                                      txFrom: {is: $address}) {

                                      block {
                                        timestamp {
                                          time (format: "%Y-%m-%d %H:%M:%S")
                                        }
                                      }
                                      smartContractMethod {
                                        name
                                        signatureHash
                                      }
                                      smartContract {
                                        address {
                                          address
                                          annotation
                                        }
                                      }
                                      txHash
                                      fee
                                      fee_usd: fee(in: USD)
                                    }
                                  }
                                }`);

        new widgets.table('#top_gas_calls_table', query, 'tron.smartContractCalls', {
            title: '<%= t('widgets.headers.calls_table') %>',
            dataOptions: [
                {
                    title: '<%= t('widgets.titles.timestamp') %>',
                    type: 'string',
                    path: 'block.timestamp.time'
                },
                {
                    title: '<%= t('widgets.titles.smart_contract') %>',
                    type: 'string-ellipsis',
                    path: ['smartContract.address.annotation', 'smartContract.address.address'],
                    urlCallbackName: 'smart_contract_path'
                },
                {
                    title: '<%= t('widgets.titles.method') %>',
                    type: 'string',
                    path: ['smartContractMethod.name','smartContractMethod.signatureHash'],
                    urlCallbackName: 'smart_contract_method_path'
                },
                {
                    title: '<%= t('widgets.titles.fee') %>',
                    type: 'amount',
                    path: 'fee'
                },
                {
                    renderCallback: <%= render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: '""', amount: 'item.fee_usd'} %>
                },
                {
                    title: '<%= t('widgets.titles.transaction') %>',
                    type: 'string-ellipsis',
                    path: 'transaction.hash',
                    urlCallbackName: 'transaction_path'
                },
            ]
        });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
            address: '<%= @address %>'
        });


    });

</script>