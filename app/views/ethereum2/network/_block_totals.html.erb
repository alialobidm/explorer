<div class="row">
  <div class="col-lg-4 mb-4">
    <div class="card border-success">
      <div class="card-header"><%= t('widgets.titles.slot_count') %></div>
      <div class="card-body">
        <div id="slot_count"><%= t('loading') %></div>
      </div>
    </div>
  </div>
  <div class="col-lg-4 mb-4">
    <div class="card border-warning">
      <div class="card-header"><%= t('widgets.titles.block_count') %></div>
      <div class="card-body">
        <div id="block_count"><%= t('loading') %></div>
      </div>
    </div>
  </div>
  <div class="col-lg-4 mb-4">
    <div class="card border-warning">
      <div class="card-header"><%= t('widgets.titles.proposers_count') %></div>
      <div class="card-body">
        <div id="proposers_count"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>
<script type="module">
  $( document ).ready(function() {

      var query = new widgets.query(`
  query ($network: Ethereum2Network!, $from: ISO8601DateTime, $till: ISO8601DateTime) {
    ethereum2(network: $network) {
  blocks(date: {since: $from, till: $till}, options: {groupBy: false}) {
    count
    slots: maximum(of: block)
    proposers: count(uniq: block_proposers)
  }
    }
  }
  `);

      new widgets.text('#slot_count', query, 'ethereum2.blocks', {
          html_class: 'fontsize35rem text-center text-success',
          dataOptions: {
              type: 'string',
              path: 'slots'
          }

      });

      new widgets.text('#proposers_count', query, 'ethereum2.blocks', {
          html_class: 'fontsize35rem text-center text-success',
          dataOptions: {
              type: 'string',
              path: 'proposers'
          }

      });

      new widgets.text('#block_count', query, 'ethereum2.blocks', {
          html_class: 'fontsize35rem text-center text-warning',
          dataOptions: {
              type: 'string',
              path: 'count'
          }

      });

      new widgets.text('#block_count', query, 'ethereum2.blocks', {
          html_class: 'fontsize35rem text-center text-warning',
          dataOptions: {
              type: 'string',
              path: 'count'
          }

      });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
          network: '<%= params['network']['network'] %>'
      });


  });
</script>