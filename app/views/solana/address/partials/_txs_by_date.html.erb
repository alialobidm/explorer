<div class="row">
  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.transactions_by_time') %></div>
      <div class="card-body">
        <div id="transactions_by_time"><%= t('loading') %></div>
      </div>
    </div>
  </div>

  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.transaction_fee_by_time') %></div>
      <div class="card-body">
        <div id="transaction_fee_by_time"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>


<script type="module">

    $( document ).ready(function() {

      const qraphql_query = `
        query ($network: SolanaNetwork!, $dateFormat: String!, $from: ISO8601DateTime, $till: ISO8601DateTime, $address: String) {
          solana(network: $network) {
            transactions(
              options: {asc: "date.date"}
              date: {since: $from, till: $till}
              signer: {is: $address}
            ) {
              date{
                date(format: $dateFormat)
              }
              countBigInt
              transactionFee
            }
          }
        }
      `.trim();

      const query = new widgets.query(qraphql_query);

      new widgets.chartByTime('#transactions_by_time', query, 'solana.transactions', {
          title: '<%= t('widgets.headers.transactions_by_time') %>',
          chartOptions: {
              vAxes: {
                  '0': {
                      title: '<%= t('widgets.titles.transactions_count') %>'
                  }
              },
              seriesType: 'bars',
              series: {
                  '0': { color: '#28a745' }
              },
          },
          dataOptions: [
              {
                  title: {label: '<%= t('widgets.titles.date') %>', type: 'date' },
                  path: 'date.date'
              },
              {
                  title: {label: '<%= t('widgets.titles.transactions_count') %>', type: 'number' },
                  path: 'countBigInt'
              },

          ]
      });

      new widgets.chartByTime('#transaction_fee_by_time', query, 'solana.transactions', {
          title: '<%= t('widgets.headers.transaction_fee_by_time') %>',
          chartOptions: {
              vAxes: {
                  '0': {
                      title: '<%= t('widgets.titles.fee') %>, <%= @network[:currency] %>',
                  }
              },
              series: {
                  '0': { color: '#ffc107' }
              },
              seriesType: 'bars'
          },
          dataOptions: [
              {
                  title: {label: '<%= t('widgets.titles.date') %>', type: 'date' },
                  path: 'date.date'
              },
              {
                  title: '<%= t('widgets.titles.fee') %>, <%= @network[:currency] %>',
                  path: 'transactionFee'
              },

          ]
    });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
      network: '<%= params['network']['network'] %>',
      address: '<%= @address %>'
    });
  });
</script>
