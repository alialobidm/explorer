<div class="row">

  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.tx_info') %></div>
      <div class="card-body">
        <div id="tx_info_1"><%= t('loading') %></div>
      </div>
    </div>
  </div>

  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.tx_info_2') %></div>
      <div class="card-body">
        <div id="tx_info_2"><%= t('loading') %></div>
      </div>
    </div>
  </div>

</div>
<script type="module">

    $( document ).ready(function() {


        var query = new widgets.query(`query ($network: CardanoNetwork!,
                        $hash:String!){
                          cardano(network: $network ){
                            transactions(txHash: {is: $hash}) {
                              block {
                                height
                                timestamp{
                                  time (format: "%Y-%m-%d %H:%M:%S")
                                }
                              }
                              index

                              inputCount
                              outputCount
                              inputValue
                              input_value_usd: inputValue(in: USD)
                              outputValue
                              output_value_usd: outputValue(in: USD)
                              feeValue
                              fee_value_usd: feeValue(in: USD)

                              depositValue
                              deposit_value_usd: depositValue(in: USD)

                              includedAt {
                                time (format: "%Y-%m-%d %H:%M:%S")
                              }
                              invalidBefore
                              invalidHereafter

                              metadata

                              withdrawalCount
                              withdrawalValue

                              mintCount


                              txSize

                          }
                        }
                  }`);



        new widgets.table('#tx_info_1', query, 'cardano.transactions', {
            title: '<%= t('widgets.headers.tx_info_2') %>',
            renderData: function (data) {
                item = data[0];
                return !item ? [] : [
                    {name: '<%= t('widgets.titles.block') %>', value: item.block.height, block: item.block},
                    {name: '<%= t('widgets.titles.timestamp') %>', value: item.block.timestamp.time},
                    {name: '<%= t('widgets.titles.transaction_index') %>', value: item.index},

                    {name: '<%= t('widgets.titles.input_value') %>', value: item.inputValue + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'item.input_value_usd'} %>} ,
                    {name: '<%= t('widgets.titles.output_value') %>', value: item.outputValue + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'item.output_value_usd'} %>} ,
                    {name: '<%= t('widgets.titles.deposit_value') %>', value: item.depositValue + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'item.deposit_value_usd'} %>} ,



                    {name: '<%= t('widgets.titles.fee') %>', value: item.feeValue + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'item.fee_value_usd'} %>} ,

                ];
            },
            dataOptions: [
                {
                    title: '<%= t('widgets.titles.attribute') %>',
                    type: 'string',
                    path: 'name',
                    style: 'width: 150px',
                    html_class: 'text-info font-weight-bold'
                },
                {
                    title: '<%= t('widgets.titles.property_value') %>',
                    type: 'string-ellipsis',
                    escape: false,
                    path: 'value',
                    urlCallbackName: 'property_value_path'
                },
            ]
        });
        new widgets.table('#tx_info_2', query, 'cardano.transactions', {
            title: '<%= t('widgets.headers.tx_info') %>',
            renderData: function (data) {
                item = data[0];
                return !item ? [] : [
                    {name: '<%= t('widgets.titles.included_at') %>', value: item.includedAt.time},
                    {name: '<%= t('widgets.titles.input_count') %>', value: item.inputCount} ,
                    {name: '<%= t('widgets.titles.output_count') %>', value: item.outputCount} ,
                    {name: '<%= t('widgets.titles.withdrawal_count') %>', value: item.withdrawalCount} ,
                    {name: '<%= t('widgets.titles.minted_count') %>', value: item.mintCount} ,

                    {name: '<%= t('widgets.titles.txSize') %>', value: item.txSize} ,

                    {name: '<%= t('widgets.titles.timestamp') %>', value: item.block.timestamp.time},
                ];
            },
            dataOptions: [
                {
                    title: '<%= t('widgets.titles.attribute') %>',
                    type: 'string',
                    path: 'name',
                    style: 'width: 150px',
                    html_class: 'text-info font-weight-bold'
                },
                {
                    title: '<%= t('widgets.titles.property_value') %>',
                    type: 'string-ellipsis',
                    path: 'value',
                    urlCallbackName: 'property_value_path'
                },
            ]
        });

        query.request({
            hash: '<%= @hash %>',
            network: '<%= @network[:network] %>'
        });

    });
</script>
