<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.block_info') %></div>
      <div class="card-body">
        <div id="block_info"><%= t('loading') %></div>
      </div>
    </div> </div>
</div>

<script type="module">
  $( document ).ready(function() {
    const qraphql_query = `
      query ($network: ElrondNetwork!, $hash: String!) {
        elrond(network: $network) {
          blocks(hash: {is: $hash}) {
            time {
              time(format: "%Y-%m-%d %H:%M:%S")
            }
            height
            hash
            previousBlockHash
            epoch
            transactionCount
            shard
            size
            sizeTxs
            proposer{
              hex
            }
            stateRootHash
            publicKeyBitmap
          }
        }
      }
    `.trim();

    const query = new widgets.query(qraphql_query);

    new widgets.table('#block_info', query, 'elrond.blocks', {
      title: '<%= t('widgets.headers.block_info') %>',
      renderData: function (data) {
        item = data[0];
        return !item ? [] : [
            {name: '<%= t('widgets.titles.timestamp') %>', value: item.time.time},
            {name: '<%= t('widgets.titles.height') %>', value: item.height},
            {name: '<%= t('widgets.titles.hash') %>', value: item.hash},

            {
              name: '<%= t('widgets.titles.previous_block_hash') %>',
              value: item.previousBlockHash,
              blockHash: item.previousBlockHash,
            },
            {name: '<%= t('widgets.titles.transactions_count') %>', value: item.transactionCount},

            {name: '<%= t('widgets.titles.epoch') %>', value: item.epoch},
            {name: '<%= t('widgets.titles.shard') %>', value: item.shard},
            {name: '<%= t('widgets.titles.size') %>', value: item.size},
            {name: '<%= t('widgets.titles.size_txs') %>', value: item.sizeTxs},
            {name: '<%= t('widgets.titles.proposer') %>', value: item.proposer.hex},
            {name: '<%= t('widgets.titles.state_root_hash') %>', value: item.stateRootHash},
            {name: '<%= t('widgets.titles.public_key') %>', value: item.publicKeyBitmap}
          ];
        },
        dataOptions: [
          {
            title: '<%= t('widgets.titles.attribute') %>',
            type: 'string',
            path: 'name',
            style: 'width: 250px',
            html_class: 'text-info font-weight-bold'
          },
          {
            title: '<%= t('widgets.titles.property_value') %>',
            type: 'string-ellipsis',
            path: 'value',
            urlCallbackName: 'property_value_path'
          },
        ]
    });

    query.request({
      hash: "<%= @block_hash %>",
      network: '<%= @network[:network] %>'
    });
  });
</script>

