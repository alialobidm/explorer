<div class="col-12 col-lg-6 mb-4">
  <div class="card">
    <div class="card-header"><%= t('widgets.headers.currencies_sent_received') %></div>
    <div class="card-body">
      <div id="currencies_table"><%= t('loading') %></div>
    </div>
  </div>
</div>
<script type="module">
  $(document).ready(function() {
    const graphql_query = `
      query ($network: ElrondNetwork!, $limit: Int!, $offset: Int!, $from: ISO8601DateTime, $till: ISO8601DateTime, $address: String!) {
        elrond(network: $network) {
          transfers(
            options: {limit: $limit, offset: $offset, desc: ["count_in", "count_out"]}
            any: [{transferReceiver: {is: $address}}, {transferSender: {is: $address}}]
            date: {since: $from, till: $till}
          ) {
            sum_in: amount(calculate: sum, transferReceiver: {is: $address})
            <%#= TODO sum_in_usd: amount(in: USD, calculate: sum, transferReceiver: {is: $address}) %>
            sum_out: amount(calculate: sum, transferSender: {is: $address})
            <%#= TODO sum_out_usd: amount(in: USD, calculate: sum, transferSender: {is: $address}) %>
            count_in: countBigInt(transferReceiver: {is: $address})
            count_out: countBigInt(transferSender: {is: $address})
            currency {
              address
              symbol
            }
          }
        }
      }
    `.trim();

    const query = new widgets.query(graphql_query);

    new widgets.table('#currencies_table', query, 'elrond.transfers', {
      title: '<%= j t('widgets.headers.tx_calls') %>',
      dataOptions: [
        {
          title: '<%= j t('widgets.titles.currency') %>',
          type: 'string-ellipsis',
          path: 'currency.symbol'
        },
        {
          title: '',
          type: 'string',
          data: '<i class="fa fa-sign-in text-success"></i>',
          html_class: 'text-center'
        },
        {
          title: '<%= j t('widgets.titles.receive') %>',
          type: 'amount',
          path: 'sum_in'
        },
        {
          renderCallback: function(item) {
            return `<%= j render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: '""', amount: 'item.sum_in_usd'} %>`;
          }
        },
        {
          title: '<%= j t('widgets.titles.txs') %>',
          type: 'count',
          path: 'count_in',
          data: '%{DATA} <span class="fa fa-list"></span>',
          urlCallbackName: 'transfer_to_path'
        },
        {
          title: '<%= j t('widgets.titles.send') %>',
          type: 'amount',
          path: 'sum_out'
        },
        {
          renderCallback: function(item) {
            return `<%= j render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: '""', amount: 'item.sum_out_usd'} %>`;
          }
        },
        {
          title: '',
          type: 'string',
          data: '<i class="fa fa-sign-out text-warning"></i>',
        },
        {
          title: '<%= j t('widgets.titles.txs') %>',
          type: 'count',
          path: 'count_out',
          data: '%{DATA} <span class="fa fa-list"></span>',
          urlCallbackName: 'transfer_from_path'
        },
      ]
    });

    queryWithTimeRange(rr, query, '<%= j @from %>', '<%= j @till %>', {
      address: '<%= j @address %>',
      network: '<%= j params['network']['network'] %>'
    });
  });
</script>
