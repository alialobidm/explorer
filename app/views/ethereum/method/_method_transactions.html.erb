<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header">
        <%= t('widgets.titles.method_transactions') %>
      </div>
      <div class="card-body">
        <div id="method_transactions">
          <%= t('loading') %>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="module">
  $(document).ready(function () {

    const network = "<%= @network[:network] %>"
    const signatureValue = "<%= @signature %>";
    var query = new widgets.query(`query ($network: EthereumNetwork!, $method: String!, $limit: Int!, $offset: Int!, $from: ISO8601DateTime, $till: ISO8601DateTime) {
    ethereum(network: $network) {
  smartContractCalls(
    smartContractMethod: {is: $method}
    options: {desc: "block.timestamp.time", limit: $limit, offset: $offset}
    date: {since: $from, till: $till}
  ) {
    block {
      timestamp {
        time(format: "%Y-%m-%d %H:%M:%S")
      }
      height
    }
    smartContractMethod {
      name
    }
    transaction {
      hash
    }
    gasValue
    gas_value_usd: gasValue(in: USD)
  }
    }
  }
  `);

    new widgets.table('#method_transactions', query, 'ethereum.smartContractCalls', {
      title: '<%= t('widgets.titles.method_transactions') %> smartContractMethod.name',
      dataOptions: [
        {
          title: '<%= t('widgets.titles.transaction') %>',
          type: 'string-ellipsis',
          urlCallbackName: 'transaction_path',
          renderCallback: <%= render partial: 'ethereum/tx_external_display', formats: :text %>
        },
        {
          title: '<%= t('widgets.titles.method') %>',
          type: 'string',
          path: ['smartContractMethod.name', 'smartContractMethod.signatureHash'],
        },
        {
          title: '<%= t('widgets.titles.block') %>',
          type: 'string',
          path: 'block.height',
          urlCallbackName: 'block_path'
        },
        {
          title: '<%= t('widgets.titles.gas_value') %>',
          type: 'amount',
          path: 'gasValue'
        },
        {
          renderCallback: <%= render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: '""', amount: 'item.gas_value_usd'} %>
        },
        {
          title: '<%= t('widgets.titles.timestamp') %>',
          type: 'string',
          path: 'block.timestamp.time'
        },
      ]
    });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
      network: network,
      method: signatureValue
    });
  });
</script>