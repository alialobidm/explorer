<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.token_trades_currencies') %></div>
      <div class="card-body">
        <div id="token_currencies"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>

<script type="module">

    $( document ).ready(function() {


        var query = new widgets.query(`
                        query ($network: EthereumNetwork!,
                                $limit: Int!,
                                $offset: Int!
                                $protocol: String!
                                $from: ISO8601DateTime,
                                $till: ISO8601DateTime){
                    ethereum(network: $network){
                      dexTrades(options:{desc: "count", limit: $limit, offset: $offset},
                        date: {since: $from till: $till }
                        protocol: {is: $protocol}
                        ) {

                          sellCurrency {
                            symbol
                            address
                          }

                          sellAmount
                          sell_amount_usd: sellAmount(in: USD)

                          buyCurrency {
                            symbol
                            address
                          }

                          buyAmount
                          buy_amount_usd: buyAmount(in: USD)

                          count
                          median_price: price(calculate: median)

                          last_price: maximum(of: block, get: price)

                          dates: count(uniq: dates)
                          started: minimum(of: date)


                      }
                    }
                  }`);

        new widgets.table('#token_currencies', query, 'ethereum.dexTrades', {
            title: '<%= t('widgets.headers.token_trades_currencies') %>',
            dataOptions: [


                {
                    title: '<%= t('widgets.titles.sell_amount') %>',
                    type: 'amount',
                    path: 'sellAmount'
                },
                {
                    title: '<%= t('widgets.titles.sell_currency') %>',
                    type: 'string',
                    path: 'sellCurrency.symbol',
                    urlCallbackName: 'sell_token_path',
                    renderCallback: <%= render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: 'item.sellCurrency.symbol', amount: 'item.sell_amount_usd'} %>
                },
                {
                    title: '',
                    type: 'string',
                    data: '<i class="fa fa-sign-in text-success"></i>',
                    html_class: 'text-center'
                },

                {
                    title: '<%= t('widgets.titles.buy_amount') %>',
                    type: 'amount',
                    path: 'buyAmount'
                },
                {
                    title: '<%= t('widgets.titles.buy_currency') %>',
                    type: 'string',
                    path: 'buyCurrency.symbol',
                    urlCallbackName: 'buy_token_path',
                    renderCallback: <%= render partial: 'ethereum/currency_with_amount_usd', formats: :text, locals: {currency: 'item.buyCurrency.symbol', amount: 'item.buy_amount_usd'} %>
                },

                {
                    title: '<%= t('widgets.titles.trades') %>',
                    path: 'count'
                },

                {
                    title: '<%= t('widgets.titles.started') %>',
                    path: 'started'
                },
                {
                    title: '<%= t('widgets.titles.trades_days') %>',
                    path: 'dates'
                },

                {
                    title: '<%= t('widgets.titles.median_price') %>',
                    type: 'amount',
                    path: 'median_price'
                },
                {
                    title: '<%= t('widgets.titles.last_price') %>',
                    type: 'amount',
                    path: 'last_price'
                },

            ]
        });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
            network: '<%= params['network']['network'] %>',
            protocol: '<%= @protocol %>'
        });
    });

</script>