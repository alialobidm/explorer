<div class="col-12 col-lg-6 mb-4">
  <div class="card">
    <div class="card-header">
      <% if @token_info && @token_info.name && @token_info.symbol %>
        <%= t('widgets.headers.smart_contract_statitics_token', token_name: @token_info.name, token_symbol: @token_info.symbol) %>
      <% else %>
        <%= t('widgets.headers.smart_contract_statitics') %>
      <% end %>
    </div>
    <div class="card-body">
      <div id="smart_contract_statitics"><%= t('loading') %></div>
    </div>
  </div>
</div>

<script type="module">
  document.addEventListener("DOMContentLoaded", function() {
    const query = new widgets.query(`
      query (
        $network: EthereumNetwork!,
        $address: String!,
        $from: ISO8601DateTime,
        $till: ISO8601DateTime
      ) {
        ethereum(network: $network) {
          smartContractCalls(
            date: { since: $from, till: $till },
            smartContractAddress: { is: $address }
          ) {
            created: minimum(of: block, get: time)
            created_block: minimum(of: block)
            created_tx: minimum(of: block, get: tx_hash)
            created_by: minimum(of: block, get: caller)
            max_time: maximum(of: time)
            external_calls: count(external: true)
            internal_calls: count(external: false)
            count
            callers: count(uniq: callers)
            days: count(uniq: dates)
            txs: count(uniq: txs)
          }
        }
      }
    `);

    new widgets.table('#smart_contract_statitics', query, 'ethereum.smartContractCalls', {
      title: '<%= t('widgets.headers.smart_contract_statitics') %>',
      renderData: function(data) {
        const item = data[0];
        return !item ? [] : [
          { name: '<%= t('widgets.titles.calls_count') %>', value: item.count },
          { name: '<%= t('widgets.titles.external_calls_count') %>', value: item.external_calls },
          { name: '<%= t('widgets.titles.internal_calls_count') %>', value: item.internal_calls },
          { name: '<%= t('widgets.titles.transactions_count') %>', value: item.txs },
          { name: '<%= t('widgets.titles.uniq_callers') %>', value: item.callers },
          { name: '<%= t('widgets.titles.call_days') %>', value: item.days },
          { name: '<%= t('widgets.titles.last_transaction_time') %>', value: item.max_time },
          {
            name: '<%= t('widgets.titles.created') %>',
            value: `${item.created} <%= t('pages.smart_contract.statistics.in_block') %> 
              <a href="/<%= j @network[:network] %>/block/${item.created_block}">${item.created_block}</a>`
          },
          {
            name: '<%= t('widgets.titles.create_tx') %>',
            value: `<a href="/<%= j @network[:network] %>/tx/${item.created_tx}">${item.created_tx}</a>`
          },
          {
            name: '<%= t('widgets.titles.creator') %>',
            value: `<a href="/<%= j @network[:network] %>/address/${item.created_by}">${item.created_by}</a>`
          }
        ];
      },
      dataOptions: [
        {
          title: '<%= t('widgets.titles.metric') %>',
          type: 'string-ellipsis',
          path: 'name',
          html_class: 'text-info font-weight-bold'
        },
        {
          title: '<%= t('widgets.titles.property_value') %>',
          type: 'string-ellipsis',
          escape: false,
          path: 'value',
          urlCallbackName: 'property_value_path'
        }
      ]
    });

    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';
    const address = '<%= j @address %>';
    const network = '<%= j params[:network][:network] %>';

    queryWithTimeRange(rr, query, fromDate, tillDate, {
      network: network,
      address: address
    });
  });
</script>
