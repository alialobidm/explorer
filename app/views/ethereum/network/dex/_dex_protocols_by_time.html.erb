<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.dex_tradex_by_protocol') %></div>
      <div class="card-body">
        <div id="dex_tradex_by_protocol"><%= t('loading') %></div>
      </div>
    </div>
  </div>

</div>



<script type="module">

    $( document ).ready(function() {

        var query = new widgets.query(`
            query ($network: EthereumNetwork!,
                  $dateFormat: String!,

                  $from: ISO8601DateTime,
                  $till: ISO8601DateTime){
                    ethereum(network: $network ){
                      dexTrades(options:{asc: "date.date"}, date: {
                        since: $from
                        till: $till}

                      ) {
                        date: date{
                          date(format: $dateFormat)
                        }

                        protocol
                        count


                      }
                    }
                  }`);

        new widgets.pivotChart('#dex_tradex_by_protocol', query, 'ethereum.dexTrades', {
            title: '<%= t('widgets.titles.dex_tradex_by_protocol') %>',
            chartOptions: {
                vAxes: {
                    '0': {
                        title: '<%= t('widgets.titles.trades') %>',
                        viewWindow: { min: 0 }
                    }
                },
                hAxis: <%= render partial: 'shared/date_axis', formats: :json%>,
                bar: {groupWidth: "100%"},
                isStacked: true
            },
            cols: [{
                title: '<%= t('widgets.headers.protocol') %>',
                path: 'protocol',
                metrics: [
                    {
                        title: '<%= t('widgets.headers.trades') %>',
                        path: 'count'
                    }
                ]
            }],
            rows: [{
                title: 'Date',
                path: 'date.date'
            }],
            sort: {metric: '<%= t('widgets.headers.trades') %>', direction: 'desc', axis: 'col'},
            limit: {length: 41, other: true, axis: 'col'},
        });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
            network: '<%= params['network']['network'] %>'
        });


    });
</script>