<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='ActiveMinersByTime'></div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='BlockRewardsByDate'></div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='Miners' class='card'></div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='MinersBlockCountByTime'></div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='MinersBlockRewardByTime'></div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='Difficult' class='card'></div>
  </div>
</div>

<script type="module">
    class ActiveMinersByTime extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title:()=>'Active Miners By Time',
                id:'ActiveMinersByTime',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                    },
                    {
                        name: 'Uniq Miners', cell: row => +row.mainers,
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    colors: ['FFC106'],
                    legend: {position: "top"},
                }
            }
        }
    }

    class BlockRewardsByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title:()=>'Block Rewards By Date',
                id:'BlockRewardsByDate',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                    },
                    {
                        name: 'Rewards', cell: row => +row.reward,
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    colors: ['28A745'],
                    legend: {position: "top"},
                }
            }
        }
    }

    class Miners extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title: response => `${WidgetConfig.getBlockProducerName(response.EVM.MinerRewards[0]?.ChainId)}s`,
                id: 'Miners',
                columns: [
                    {
                        name: 'Miner', cell: row => row.Block.Coinbase,
                        rendering: renderJustAddressLink, headerStyle: {width: '20%'}
                    },
                    {
                        name: 'Block Count', cell: row => row.count,
                        headerStyle: {width: '120px'},
                    },
                    {
                        name: 'First date', cell: row => row.Block.min_date,
                        headerStyle: {width: '120px'},
                    },
                    {
                        name: 'Last date', cell: row => row.Block.max_date,
                        headerStyle: {width: '120px'},
                    },
                    {
                        name: 'Block Reward Total', cell: row => row.reward_Total,
                        rendering: renderNumbersWithCurrency, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Reward Burnt Fees', cell: row => row.reward_BurntFees,
                        rendering: renderNumbersWithCurrency, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Reward Tx Fees', cell: row => row.reward_TxFees,
                        rendering: renderNumbersWithCurrency, headerStyle: {textAlign: 'end'},
                    },
                ]
            }
        }
    }

    class MinersBlockCountByTime extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title: response => `${WidgetConfig.getBlockProducerName(response.EVM.MinerRewards[0]?.ChainId)}s Block Count By Time`,
                id: 'MinersBlockCountByTime',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                    },
                    {
                        name: row => row.Block.Coinbase,
                        cell: row => +row.count,
                    },
                ],
                options: {
                    isStacked: true,
                    theme: 'material',
                    height: 405,
                    chartArea: {
                        left: 50,
                        width: '65%',
                    },
                }
            }
        }
    }

    class MinersBlockRewardByTime extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title: response => `${WidgetConfig.getBlockProducerName(response.EVM.MinerRewards[0]?.ChainId)}s Block Reward By Date`,
                id: 'MinersBlockRewardByTime',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                    },
                    {
                        name: row => row.Block.Coinbase,
                        cell: row => +row.sum,
                    },
                ],
                options: {
                    isStacked: true,
                    theme: 'material',
                    height: 405,
                    chartArea: {
                        left: 50,
                        width: '65%',
                    },
                }
            }
        }
    }
    class Difficult extends LineChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.MinerRewards,
                chainId: response => response.EVM.MinerRewards[0]?.ChainId,
                title: () => 'Difficulty By Time',
                id: 'Difficult',
                columns: [
                    {
                        name: 'Date',
                        cell: row => row.Block.Date
                    },
                    {
                        name: 'Median Difficult',
                        cell: row => +row.median
                    },
                ],
                options: {
                    height: 450,
                    legend: {position: 'right'},
                    colors: ['#FF5733'],
                }
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
    }
    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate , tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>', [[BlockRewardsByDate, '#BlockRewardsByDate'],[ActiveMinersByTime, '#ActiveMinersByTime']], 'Block-Rewards-By-Date', variables);
        renderComponent('<%=@streaming_access_token %>', [[Miners, '#Miners']], 'Miners_1', variables);
        renderComponent('<%=@streaming_access_token %>', [[MinersBlockRewardByTime, '#MinersBlockRewardByTime'],[MinersBlockCountByTime, '#MinersBlockCountByTime'],[Difficult, '#Difficult']], 'Miners-Block-Count-By-Time_5', variables);
    })
</script>
