<div class="col-12 col-lg-6 mb-4">
  <div class="card">
    <div class="card-header"><%= t('widgets.headers.address_statistics') %></div>
    <div class="card-body">
      <div id="address_statistics"><%= t('loading') %></div>
    </div>
  </div>
</div>

<script type="module">

    $( document ).ready(function() {
        var query = new widgets.query(`query ($network: BitcoinNetwork!,
          $address:String!
          $from: ISO8601DateTime,
          $till: ISO8601DateTime){
            bitcoin(network: $network ){
              inputs(
                date: {
                                since: $from
                                till: $till}
                inputAddress: {is: $address}
              ){
                count
                value
                value_usd: value(in: USD)

                min_date: minimum(of: date)
                max_date: maximum(of: date)
              }

              outputs(
                date: {
                                since: $from
                                till: $till}
                outputAddress: {is: $address}
              ){
                count
                value
                value_usd: value(in: USD)

                min_date: minimum(of: date)
                max_date: maximum(of: date)


              }


            }
          }`);

        new widgets.table('#address_statistics', query, 'bitcoin', {
            title: '<%= t('widgets.headers.address_statistics') %>',
            renderData: function (data) {
                let inputs = data.inputs[0];
                let outputs = data.outputs[0];
                return  [
                    {name: '<%= t('widgets.titles.inputs_to_address_count') %>', value: inputs.count },
                    {name: '<%= t('widgets.titles.outputs_from_address_count') %>', value: outputs.count },


                    {name: '<%= t('widgets.titles.first_transaction_date') %>', value: outputs.min_date },
                    {name: '<%= t('widgets.titles.last_transaction_date') %>', value: ((inputs.max_date > outputs.max_date) ? inputs.max_date : outputs.max_date)},

                    {name: '<%= t('widgets.titles.value_to_address') %>', value: outputs.value + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'outputs.value_usd'} %>},
                    {name: '<%= t('widgets.titles.value_from_address') %>', value: inputs.value + ' <%= @network[:currency] %>' + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {amount: 'inputs.value_usd'} %>},


                    {name: '<%= t('widgets.titles.unspent_value') %>',
                        value: (parseInt(parseFloat(outputs.value)*1.0e8)-parseInt(parseFloat(inputs.value)*1.0e8)) / 1.0e8
                            + ' <%= @network[:currency] %>'},


                ];
            },
            dataOptions: [
                {
                    title: '<%= t('widgets.titles.metric') %>',
                    type: 'string-ellipsis',
                    path: 'name',
                    html_class: 'text-info font-weight-bold'
                },
                {
                    title: '<%= t('widgets.titles.property_value') %>',
                    type: 'string-ellipsis',
                    escape: false,
                    path: 'value',
                    urlCallbackName: 'property_value_path'
                },
            ]
        });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
            network: '<%= @network[:network] %>',
            address: '<%= @address %>'
        });


    });

</script>