<div class="row">
  <div class="col-12 mb-4">
    <span style="color:red; font-weight: bold"><%= t('tabs.network.miner_distrib.attention') %></span>
  </div>
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.titles.miners_block_count_by_time') %></div>
      <div class="card-body">
        <div id="miners_block_count"><%= t('loading') %></div>
      </div>
    </div>
  </div>
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.titles.miners_block_reward_by_time') %></div>
      <div class="card-body">
        <div id="miners_block_amount"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>

<script type="module">
    $( document ).ready(function() {
        var query = new widgets.query(`
                  query ($network: BitcoinNetwork!,
                        $dateFormat: String!,
                        $from: ISO8601DateTime,
                        $till: ISO8601DateTime){
                  bitcoin(network: $network ){
                    outputs(
                      options:{asc: "date.date"}
                      date: { since: $from till: $till}
                      txIndex: {is: 0}
                      outputDirection: {is: mining}
                      outputScriptType: {notIn: ["nulldata","nonstandard"]}
                    ) {
                      address: outputAddress{
                        address
                        annotation
                      }

                      date {
                        date(format: $dateFormat)
                      }

                      reward: value
                      count(uniq: blocks)
                    }
                  }
                }`);

        new widgets.pivotChart('#miners_block_count', query, 'bitcoin.outputs', {
            title: '<%= t('widgets.titles.miners_block_count_by_time') %>',
            chartOptions: {
                vAxes: {
                    '0': {
                        title: '<%= t('widgets.titles.miners_block_count') %>',
                        viewWindow: { min: 0 }
                    }
                },
                hAxis: <%= render partial: 'shared/date_axis', formats: :json %>,
                bar: {groupWidth: "100%"},
                isStacked: true
            },
            cols: [{
                title: '<%= t('widgets.headers.miners') %>',
                path: ['address.annotation', 'address.address'],
                metrics: [
                    {
                        title: 'Count',
                        path: 'count'
                    }
                ]
            }],
            rows: [{
                title: 'Date',
                path: 'date.date'
            }],
            sort: {metric: 'Count', direction: 'desc', axis: 'col'},
            limit: {length: 10, other: true, axis: 'col'},
        });

        new widgets.pivotChart('#miners_block_amount', query, 'bitcoin.outputs', {
            title: '<%= t('widgets.titles.miners_block_reward_by_time') %>',
            chartOptions: {
                vAxes: {
                    '0': {
                        title: '<%= t('widgets.titles.miners_block_reward') %>',
                        viewWindow: { min: 0 }
                    }
                },
                hAxis: <%= render partial: 'shared/date_axis', formats: :json %>,
                bar: {groupWidth: "100%"},
                isStacked: true
            },
            cols: [{
                title: '<%= t('widgets.headers.miners') %>',
                path: ['address.annotation', 'address.address'],
                metrics: [
                    {
                        title: 'Reward',
                        path: 'reward'
                    }
                ]
            }],
            rows: [{
                title: 'Date',
                path: 'date.date'
            }],
            sort: {metric: 'Reward', direction: 'desc', axis: 'col'},
            limit: {length: 10, other: true, axis: 'col'},
        });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
            network: '<%= params['network']['network'] %>'
        });

    });
</script>
