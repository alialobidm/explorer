<script type="module">
    widgets.callbacks({

        dex_protocol_path: function(item){
              return '<%= @network[:network] %>' + '/dex_protocol/' + encodeURIComponent(item.protocol);
        },
        dex_exchange_path: function(item){
            if(item.exchange.fullName.startsWith('<')){
              return null;
            }else{
              return '<%= @network[:network] %>' + '/dex/' + item.exchange.fullName;
            }
        },
        token_path: function(item){
            if(item.currency.address=='-'){
                return '<%= @network[:network] %>/token/'+  escapeHtml(item.currency.symbol);
            }else{
                return '<%= @network[:network] %>/token/'+  item.currency.address;
            }

        },
        buy_token_path: function(item){
            if(item.buyCurrency.address=='-'){
                return '<%= @network[:network] %>/token/'+  escapeHtml(item.buyCurrency.symbol);
            }else{
                return '<%= @network[:network] %>/token/'+  item.buyCurrency.address;
            }

        },
        sell_token_path: function(item){
            if(item.sellCurrency.address=='-'){
                return '<%= @network[:network] %>/token/'+  escapeHtml(item.sellCurrency.symbol);
            }else{
                return '<%= @network[:network] %>/token/'+  item.sellCurrency.address;
            }

        },
        transfer_to_path: function(item){
            if(item.count_in==0) {
                return null;
            }else{
                return '<%= @network[:network] %>'+'/txs/transfers?receiver=<%= @address %>&currency='+
                    (item.currency.address=='-' ? escapeHtml(item.currency.symbol) : item.currency.address ) +
                    (item.address ? '&sender='+item.address.address : '');
            }
        },
        transfer_from_path: function(item){
            if(item.count_out==0) {
                return null;
            }else {
                return '<%= @network[:network] %>/txs/transfers?sender=<%= @address %>&currency=' +
                    (item.currency.address=='-' ? escapeHtml(item.currency.symbol) : item.currency.address ) +
                    (item.address ? '&receiver='+item.address.address : '');
            }
        },
        transfer_token_sender_path: function(item){
            return '<%= @network[:network] %>/txs/transfers?currency=<%= @address %>&sender='+item.sender.address;
        },
        transfer_token_receiver_path: function(item){
            return '<%= @network[:network] %>/txs/transfers?currency=<%= @address %>&receiver='+item.receiver.address;
        },
        smart_contract_method_path: function(item){
            return '<%= @network[:network] %>'+'/method/'+item.smartContractMethod.signatureHash;
        },
        smart_contract_event_path: function(item){
            return '<%= @network[:network] %>'+'/event/'+item.smartContractEvent.signatureHash;
        },
        address_path: function(item){
            if (item.address.address!='0x0000000000000000000000000000000000000000'){
                return '<%= @network[:network] %>'+'/address/'+item.address.address;
            }
        },
        sender_address_path: function(item){
            if (item.sender.address!='0x0000000000000000000000000000000000000000') {
                return '<%= @network[:network] %>' + '/address/' + item.sender.address;
            }
        },
        receiver_address_path: function(item){
            if (item.receiver.address!='0x0000000000000000000000000000000000000000') {
                return '<%= @network[:network] %>' + '/address/' + item.receiver.address;
            }
        },
        block_path: function(item){
            return '<%= @network[:network] %>'+'/block/'+(item.height || item.block.height);
        },
        transaction_path: function(item){
            return '<%= @network[:network] %>'+'/tx/'+ (item.hash || item.transaction.hash);
        },
        smart_contract_path: function(item){
            if (item.smartContract.address.address!='0x0000000000000000000000000000000000000000') {
                return '<%= @network[:network] %>' + '/smart_contract/' + item.smartContract.address.address;
            }
        },
        call_count_path: function(item){
            return '<%= @network[:network] %>/txs/calls?caller=<%= @address %>&contract=' + item.smartContract.address.address;
        },
        call_method_count_path: function(item){
            return '<%= @network[:network] %>/txs/calls?contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        event_count_path: function(item){
            return '<%= @network[:network] %>/txs/events?contract=<%= @address %>&event=' + item.smartContractEvent.signatureHash;
        },
        internal_call_method_count_path: function(item){
            return '<%= @network[:network] %>/txs/calls?internal=true&contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        external_call_method_count_path: function(item){
            return '<%= @network[:network] %>/txs/calls?internal=false&contract=<%= @address %>&method=' + item.smartContractMethod.signatureHash;
        },
        call_by_caller_count_path: function(item){
            return '<%= @network[:network] %>/txs/calls?contract=<%= @address %>&caller='+item.address.address;
        },
        property_value_path: function(item){
            if (item.address && item.address.address!='0x0000000000000000000000000000000000000000' ) {
                return '<%= @network[:network] %>' + '/address/' + item.address.address;
            } else if (item.block ){
                return '<%= @network[:network] %>'+'/block/'+item.block.height;
            }else{
                return null;
            }

        },
        token_pair_path: function(item) {
            return '<%= @network[:network] %>'+'/tokenpair/<%=@token%>/'+ item.quoteCurrency.address
        },
        token_pair_buysell_path: function(item) {
            return '<%= @network[:network] %>'+'/tokenpair/'+item.sellCurrency.address+'/'+ item.buyCurrency.address
        }
    });

</script>