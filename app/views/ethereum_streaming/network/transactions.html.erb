<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='LatestTransactions' class='card'></div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='TransactionsByDate'></div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='GasSpentByDate'></div>
  </div>
</div>
<script type="module">

    class LatestTransactions extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                columns: [
                    {
                        name: 'Timestamp', cell: row => row.Block.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: row => row.Block.Number,
                        rendering: renderBlockLink, headerStyle: {width: '100px'},
                    },
                    {
                        name: 'Sender', cell: row => row.Transaction.To,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Receiver', cell: row => row.Transaction.To,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Hash', cell: row => row.Transaction.Hash,
                        rendering: renderTX, headerStyle: {width: '100px'},
                    },
                    {
                        name: 'Value', cell: row => row.Transaction.Value,
                        rendering: renderNumbersWithCurrency, headerStyle: {textAlign: 'end', width: '100px'},
                    },
                    {
                        name: 'Gas used', cell: row => row.Receipt.GasUsed,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end', width: '100px'}
                    },
                    {
                        name: 'Gas price', cell: row => row.Fee.EffectiveGasPrice,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end', width: '100px'},
                    },
                    {
                        name: 'Sender fee', cell: row => row.Fee.SenderFee,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end', width: '100px'},
                    },
                ]
            }
        }
    }

    class TransactionsByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Count', cell: row => parseInt(row.count)
                    }
                ],
                options: {
                    title: 'Transactions Count',
                    theme: 'material',
                    height: 300
                }
            }
        }
    }

    class GasSpentByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Gas Cost per day', cell: row => +row.sum
                    }
                ],
                options: {
                    title: 'Gas spend',
                    height: 300,
                    theme: 'material',
                }
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
    }

    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate , tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>', [[LatestTransactions, '#LatestTransactions']], 'Latest-Transactions_6', variables);
        renderComponent('<%=@streaming_access_token %>', [[TransactionsByDate, '#TransactionsByDate']], 'Transactions-By-Date_3', variables);
        renderComponent('<%=@streaming_access_token %>', [[GasSpentByDate, '#GasSpentByDate']], 'Gas-Spent-By-Date_5', variables);
    })
</script>
