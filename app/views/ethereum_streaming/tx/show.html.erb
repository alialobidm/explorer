<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='TransactionAttributes'></div>
  </div>
</div>

<script type="module">
    class TransactionAttributes extends BootstrapVerticalTableComponent {
        configuration() {
            return {
                topElement: response => [...response.EVM?.Transactions, ...response.EVM?.Transfers],
                chainId: response => response.EVM.Transactions[0]?.ChainId || response.EVM.Transfers[0]?.ChainId,
                columns: [
                    {
                        name: 'Block', cell: row => row.Block?.Number,
                        rendering: renderBlockLink,
                    },
                    {
                        name: 'Timestamp', cell: row => row.Block?.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Sender', cell: row => row.Transaction?.From,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Receiver', cell: row => row.Transaction?.To,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Transfers count', cell: row => row.t_count
                    },
                    {
                        name: 'Amount', cell: row => row.t_sum
                    },
                    {
                        name: 'Gas Cost', cell: row => row.sum
                    },
                    {
                        name: 'Gas Used', cell: row => row.Block?.GasUsed
                    },
                    {
                        name: 'Transaction Fee', cell: row => row.sum
                    },
                    {
                        name: 'Gas', cell: row => row.Transaction?.Gas
                    },
                    {
                        name: 'Value', cell: row => row.Transaction?.Value
                    },
                    {
                        name: 'Protected?', cell: row => row.Transaction?.Protected
                    },
                    {
                        name: 'Success?', cell: row => row.Transfer?.Success
                    },
                    {
                        name: 'Hash', cell: row => row.Transaction?.Hash
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        hash: '<%= @hash%>',
    };
    renderComponent('<%=@streaming_access_token %>', [[TransactionAttributes, '#TransactionAttributes']], 'Transaction-Attributes_6', variables);

</script>
