<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.transaction_info') %></div>
      <div class="card-body">
        <div id="transaction_info"><%= t('loading') %></div>
      </div>
    </div> 
  </div>
</div>

<script type="module">
  $( document ).ready(function() {
    const qraphql_query = `
      query ($network: EverscaleNetwork!, $limit: Int!, $offset: Int!, $hash: String!) {
        everscale(network: $network) {
          transactions(
            options: {desc: "timestamp.time", limit: $limit, offset: $offset}
            txHash: {is: $hash}
          ) {
            timestamp {
              time(format: "%Y-%m-%d %H:%M:%S")
            }
            height
            blockHash
            blockShard
            blockWorkchain
            shardedBlock {
              height
              hash
              shard
              workchain
            }
            previousBlock
            hash
            type
            account
            logicalTime
            inMessageBounceFlag
            aborted
            originalStatus
            endStatus
            destroyed
            boc
            oldHash
            newHash
            outMessagesCount
            accountFees
            fee_usd: accountFees(in: USD)
            extInAndIhrInFees
            creditFirst
            previousTxHash
            previousTxLogicalTime
          }
        }
      }
    `.trim();

    const query = new widgets.query(qraphql_query);

    new widgets.table('#transaction_info', query, 'everscale.transactions', {
      title: '<%= t('widgets.headers.transaction_info') %>',
      renderData: function (data) {
        item = data[0];
        return !item ? [] : [
            {name: '<%= t('widgets.titles.timestamp') %>', value: item.timestamp.time},
            {name: '<%= t('widgets.titles.master_block_height') %>', value: item.height},
            {
              name: '<%= t('widgets.titles.master_block_hash') %>',
              value: item.blockHash,
              master_hash_path: item.blockHash
            },
            {
              name: '<%= t('widgets.titles.master_block_shard') %>',
              value: item.blockShard
            },
            {
              name: '<%= t('widgets.titles.master_block_workchain') %>',
              value: item.blockWorkchain
            },
            {
              name: '<%= t('widgets.titles.sharded_block_hash') %>',
              value: item.shardedBlock.hash,
              sharded_hash_path: item.shardedBlock.hash
            },
            {
              name: '<%= t('widgets.titles.sharded_block_height') %>',
              value: item.shardedBlock.height
            },
            {
              name: '<%= t('widgets.titles.sharded_block_shard') %>',
              value: item.shardedBlock.shard
            },
            {
              name: '<%= t('widgets.titles.sharded_block_workchain') %>',
              value: item.shardedBlock.workchain
            },
            {
              name: '<%= t('widgets.titles.previous_block') %>',
              value: item.previousBlock
            },
            {
              name: '<%= t('widgets.titles.tx_hash') %>',
              value: item.hash
            },
            {
              name: '<%= t('widgets.titles.type') %>',
              value: item.type
            },
            {
              name: '<%= t('widgets.titles.account') %>',
              value: item.account,
              address_path: item.account
            },
            {
              name: '<%= t('widgets.titles.logical_time') %>',
              value: item.logicalTime
            },
            {
              name: '<%= t('widgets.titles.in_message_bounce_flag') %>',
              value: item.inMessageBounceFlag
            },
            {
              name: '<%= t('widgets.titles.aborted') %>',
              value: item.aborted
            },
            {
              name: '<%= t('widgets.titles.original_status') %>',
              value: item.originalStatus
            },
            {
              name: '<%= t('widgets.titles.end_status') %>',
              value: item.endStatus
            },
            {
              name: '<%= t('widgets.titles.destroyed') %>',
              value: item.destroyed
            },
            {
              name: '<%= t('widgets.titles.boc') %>',
              value: item.boc
            },
            {
              name: '<%= t('widgets.titles.old_hash') %>',
              value: item.oldHash
            },
            {
              name: '<%= t('widgets.titles.new_hash') %>',
              value: item.newHash
            },
            {
              name: '<%= t('widgets.titles.out_messages_count') %>',
              value: item.outMessagesCount
            },
            {
              name: '<%= t('widgets.titles.fee') %>',
              value: item.accountFees + <%= render partial: 'ethereum/data_currency_with_amount_usd', formats: :text, locals: {currency: 'item.fee_usd'} %>
            },
            {
              name: '<%= t('widgets.titles.ext_in_and_ihr_in_fees') %>',
              value: item.extInAndIhrInFees
            },
            {
              name: '<%= t('widgets.titles.credit_first') %>',
              value: item.creditFirst
            },
            {
              name: '<%= t('widgets.titles.previous_tx_hash') %>',
              value: item.previousTxHash
            },
            {
              name: '<%= t('widgets.titles.previous_tx_logical_time') %>',
              value: item.previousTxLogicalTime
            },
          ];
        },
        dataOptions: [
          {
            title: '<%= t('widgets.titles.attribute') %>',
            type: 'string',
            path: 'name',
            style: 'width: 250px',
            html_class: 'text-info font-weight-bold'
          },
          {
            title: '<%= t('widgets.titles.property_value') %>',
            type: 'string-ellipsis',
            escape: false,
            path: 'value',
            urlCallbackName: 'property_value_path'
          },
        ]
    });

    query.request({
      hash: "<%= @tx_hash %>",
      network: '<%= @network[:network] %>'
    });
  });
</script>


