<div class="col-12 col-lg-6 mb-4">
  <div class="card">
    <div class="card-header"><%= t('widgets.headers.token_attributes') %></div>
    <div class="card-body">
      <div id="token_attributes"><%= t('loading') %></div>
    </div>
  </div> 
</div>

<script type="module">
  document.addEventListener("DOMContentLoaded", function() {
    const graphql_query = `
      query ($network: EverscaleNetwork!, $currency: String!, $from: ISO8601DateTime, $till: ISO8601DateTime) {
        everscale(network: $network) {
          transfers(currency: {is: $currency}, date: {since: $from, till: $till}, options: {limit: 1}) {
            currency {
              symbol
              address
              name
              decimals
              tokenType
            }
          }
        }
      }
    `.trim();

    const query = new widgets.query(graphql_query);

    new widgets.table('#token_attributes', query, 'everscale.transfers', {
      title: '<%= t('widgets.headers.token_attributes') %>',
      renderData: function(data) {
        const item = data[0];
        if (!item) {
          return [];
        }
        return [
          {name: '<%= j t('widgets.headers.token_symbol') %>', value: item.currency.symbol},
          {name: '<%= j t('widgets.headers.token_address') %>', value: item.currency.address},
          {name: '<%= j t('widgets.headers.token_type') %>', value: item.currency.tokenType},
          {name: '<%= j t('widgets.headers.token_name') %>', value: item.currency.name},
          {name: '<%= j t('widgets.headers.token_decimals') %>', value: item.currency.decimals}
        ];
      },
      dataOptions: [
        {
          title: '<%= t('widgets.titles.metric') %>',
          type: 'string-ellipsis',
          path: 'name',
          html_class: 'text-info font-weight-bold'
        },
        {
          title: '<%= t('widgets.titles.property_value') %>',
          type: 'string-ellipsis',
          escape: false,
          path: 'value',
          urlCallbackName: 'property_value_path'
        }
      ]
    });

    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';
    const currency = '<%= j @token %>';
    const network = '<%= j params[:network][:network] %>';

    queryWithTimeRange(rr, query, fromDate, tillDate, {
      currency: currency,
      network: network
    });
  });
</script>
