<div class="row">
  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.calls_by_time') %></div>
      <div class="card-body">
        <div id="calls_by_time"><%= t('loading') %></div>
      </div>
    </div>
  </div>

  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.contracts_by_time') %></div>
      <div class="card-body">
        <div id="contracts_by_time"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>

  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-header"><%= t('widgets.headers.contract_methods_by_time') %></div>
      <div class="card-body">
        <div id="contract_methods_by_time"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>


<script type="module">

  $( document ).ready(function() {
      var query = new widgets.query(`
          query ($network: EverscaleNetwork!,
                $dateFormat: String!,

                $from: ISO8601DateTime,
                $till: ISO8601DateTime){
                  everscale(network: $network ){
                    calls(options:{asc: "date.date"}, date: {
                      since: $from
                      till: $till
                      }
                    ) {
                      date: date{
                        date(format: $dateFormat)
                      }
                      count: countBigInt
                      contracts: countBigInt(uniq: smart_contracts)
                      methods: countBigInt(uniq: smart_contract_methods)
                    }
                  }
                }`);

      new widgets.chartByTime('#calls_by_time', query, 'everscale.calls', {
          title: '<%= t('widgets.headers.calls_by_time') %>',
          chartOptions: {
              vAxes: {
                  '0': {
                      title: '<%= t('widgets.titles.calls_count') %>'
                  }
              },
              seriesType: 'bars',
              series: {
                  '0': { color: '#28a745' }
              },
          },
          dataOptions: [
              {
                  title: {label: '<%= t('widgets.titles.date') %>', type: 'date' },
                  path: 'date.date'
              },
              {
                  title: {label: '<%= t('widgets.titles.calls_count') %>', type: 'number' },
                  path: 'count'
              },

          ]
      });

      new widgets.chartByTime('#contracts_by_time', query, 'everscale.calls', {
          title: '<%= t('widgets.headers.contracts_by_time') %>',
          chartOptions: {
              vAxes: {
                  '0': {
                      title: '<%= t('widgets.titles.uniq_contracts') %>'
                  }
              },
              series: {
                  '0': { color: '#ffc107' }
              },
              seriesType: 'bars'
          },
          dataOptions: [
              {
                  title: {label: '<%= t('widgets.titles.date') %>', type: 'date' },
                  path: 'date.date'
              },
              {
                  title: {label: '<%= t('widgets.titles.uniq_contracts') %>', type: 'number' },
                  path: 'contracts'
              },

          ]
      });

      new widgets.chartByTime('#contract_methods_by_time', query, 'everscale.calls', {
          title: '<%= t('widgets.headers.contract_methods_by_time') %>',
          chartOptions: {
              vAxes: {
                  '0': {
                      title: '<%= t('widgets.titles.uniq_methods') %>'
                  }
              },
              series: {
                  '0': { color: '#28a745' }
              },
              seriesType: 'bars'
          },
          dataOptions: [
              {
                  title: {label: '<%= t('widgets.titles.date') %>', type: 'date' },
                  path: 'date.date'
              },
              {
                  title: {label: '<%= t('widgets.titles.uniq_methods') %>', type: 'number' },
                  path: 'methods'
              },

          ]
      });

        const fromDate = '<%= j @from %>';
        const tillDate = '<%= j @till %>';

        queryWithTimeRange(rr, query, fromDate, tillDate,{
        network: '<%= params['network']['network'] %>'
      });
    });
</script>
